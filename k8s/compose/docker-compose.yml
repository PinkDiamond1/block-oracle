version: '3'
services:

  block-oracle:
    build:
      context: ../..
      dockerfile: k8s/Dockerfile
    network_mode: host
    environment:
      SUBGRAPH_URL: 'http://127.0.0.1:8000/subgraphs/name/edgeandnode/block-oracle'
      RUST_BACKTRACE: '1'
      DATA_EDGE_CONTRACT_ADDRESS: '0xe78a0f7e598cc8b0bb87894b0f60dd2a88d6a8ab'
    depends_on:
      epoch-subgraph-check:
        condition: service_completed_successfully
      contracts:
        condition: service_completed_successfully
    volumes:
      - ../../crates/oracle/config.dev.toml:/app/config.dev.toml
    command: [ "/usr/local/bin/block-oracle", "/app/config.dev.toml" ]

  graph-node:
    image: graphprotocol/graph-node
    network_mode: host
    restart: always
    environment:
      ipfs: '127.0.0.1:5001'
      postgres_host: localhost
      postgres_port: '5432'
      postgres_user: graph-node
      postgres_db: graph-node
      postgres_pass: let-me-in
      postgres_url: 'postgresql://graph-node:let-me-in@localhost:5432/graph-node'
      ethereum: 'hardhat:http://localhost:8545'
      GRAPH_LOG: debug
      GRAPH_NODE_GRAPHQL_PORT: '8000'
      GRAPH_NODE_STATUS_PORT: '8020'
      GRAPH_NODE_JRPC_PORT: '8030'
      GRAPH_NODE_METRICS_PORT: '8040'
      GRAPH_IPFS_TIMEOUT: '10'
    depends_on:
      contracts:
        condition: service_completed_successfully
      ipfs:
        condition: service_started
      postgres:
        condition: service_started

  ipfs:
    image: ipfs/go-ipfs:latest
    network_mode: host

  postgres:
    image: postgres
    network_mode: host
    restart: always
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    depends_on:
      postgres-cleanup:
        condition: service_completed_successfully
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  postgres-cleanup:
    image: alpine:latest
    build:
      context: .
    volumes:
      - ./pgdata:/pgdata
    # Erase all Postgres data.
    command: "/bin/sh -c 'rm -rf /pgdata/*'"

  hardhat:
    build:
      context: ../../packages/contracts
      dockerfile: ../../k8s/compose/hardhat/Dockerfile
    network_mode: host

  contracts:
    build:
      context: ../../packages/contracts
      dockerfile: ../../k8s/compose/contracts/Dockerfile
    network_mode: host
    # Retry until successful.
    restart: on-failure
    # Deploy the Data Edge contract, then also the rest of the network.
    command: sh -c "yarn hardhat run --network localhost scripts/deploy-local.ts && cd network-contracts && yarn deploy-localhost"

  epoch-subgraph:
    build:
      context: ../../packages/subgraph
      dockerfile: ../../k8s/compose/epoch-subgraph/Dockerfile
    network_mode: host
    # Retry until successful.
    restart: on-failure
    command: sh -c "yarn create-local && yarn deploy-local"
    environment:
      IPFS_PORT: '5001'

  epoch-subgraph-check:
    image: python:alpine
    network_mode: host
    restart: on-failure
    command: sh -c 'sleep 5 && python check_subgraph.py'
    volumes:
      - ./check_subgraph.py:/check_subgraph.py
    environment:
      GRAPH_NODE_GRAPHQL_PORT: '8000'
      DEPLOYMENT_NAME: 'edgeandnode/block-oracle'
